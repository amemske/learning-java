package com.uopeople;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class StudentManagementSystem {
    public static void main(String[] args) {
    	Scanner scanner = new Scanner(System.in);
    	
    	System.out.println("To add a new student press 1 ");
    	System.out.println("To update student information press 2 ");
    	System.out.println("To view a student details press 3 followed by the student ID ");
    	System.out.print("Enter your choice: ");
    	
    	int choice = scanner.nextInt();
        scanner.nextLine();  // read and process a new line
    	
        StudentRecords studentRecord = new StudentRecords();
        
    	if(choice == 1) {
    		System.out.println("To add a student: ");
            System.out.print("Enter student ID: ");
            int studentID = scanner.nextInt();
            scanner.nextLine();  // add a new line

            System.out.println("Enter student name: ");
            String studentName = scanner.nextLine();
            System.out.println("Enter student age: ");
            int studentAge = scanner.nextInt();
            scanner.nextLine();  // add a new line
            
            System.out.println("Enter student grade: ");
            int studentgrade = scanner.nextInt();
            scanner.nextLine();  // read and process a new line
            
           Student student1 = new Student(studentID, studentName, studentAge, studentgrade);

            // add students
            studentRecord.addStudent(student1);
    		
    	}
    	
    	if(choice == 2) {
    		System.out.println("To edit a student: ");
    		System.out.print("Enter student ID: ");
            int studentID = scanner.nextInt();
            scanner.nextLine();  // read and process a new line
            
            //find the student by ID
            Student currentStudent = studentRecord.findStudentByID(studentID);
            
            //display student details
            if(currentStudent != null) {
            	System.out.print("Edit student name (y/n): ");
                String updateName = scanner.nextLine();
                if ("y".equalsIgnoreCase(updateName)) {
                    System.out.print("Enter new student name: ");
                    String newStudentName = scanner.nextLine();
                    currentStudent.setName(newStudentName);
                    System.out.print("Name updated successfully");
                }
                System.out.print("Edit student age (y/n): ");
                String updateAge = scanner.nextLine();
                if ("y".equalsIgnoreCase(updateAge)) {
                    System.out.print("Enter new student name: ");
                    int newAge = scanner.nextInt();
                    currentStudent.setAge(newAge);
                    System.out.print("Age updated successfully");
                }
                System.out.print("Edit student grade (y/n): ");
                String updateGrade = scanner.nextLine();
                if ("y".equalsIgnoreCase(updateGrade)) {
                    System.out.print("Enter new student grade: ");
                    int newGrade = scanner.nextInt();
                    currentStudent.setGrade(newGrade);
                    System.out.print("Grade updated successfully");
                }
            } else {
            	System.out.println("Student not found.");
            }
            
          
    	}
    	if (choice == 3) {
    		System.out.println("To view a student: ");
            System.out.print("Enter student ID: ");
            int studentID = scanner.nextInt();
            scanner.nextLine();  // read and process a new line
            
            //find the student with the id
            Student currentStudent = studentRecord.findStudentByID(studentID);
            
            if(currentStudent != null) {
            	  studentRecord.showStudent(studentID);
            }
            
        
    	} else {
    		System.out.println("Please select 1 to 3");
    	}
    	
        

        
    }
}

class Student {
    private String name;
    private int ID;
    private int age;
    private int grade;

    // create constructor
    public Student(int ID, String name, int age, int grade) {
        this.name = name;
        this.ID = ID;
        this.age = age;
        this.grade = grade;
    }

   

	// getter methods
    public String getName() {
        return name;
    }

    public int getID() {
        return ID;
    }

    public int getAge() {
        return age;
    }

    public int getGrade() {
        return grade;
    }
//setters
    public void setName(String name) {
		this.name = name;
		
	}
    public void setAge(int age) {
		this.age = age;
		
	}
    public void setGrade(int grade) {
		this.grade = grade;
		
	}

}

interface StudentAdministrator {
    // add a student to the record
    void addStudent(Student student);

    // update student information
    void updateStudent(Student student);

    // show single students
    void showStudent(int studentID);
}

class StudentRecords implements StudentAdministrator {
    private List<Student> students;

    // constructor
    public StudentRecords() {
        this.students = new ArrayList<>();
    }

    // add a student to the record
    public void addStudent(Student student) {
        students.add(student);
    }

    // update student information
    public void updateStudent(Student student) {
        for (int i = 0; i < students.size(); i++) {
            if (students.get(i).getID() == student.getID()) {
                students.set(i, student);
            }
        }
    }

   //find a student by id
    public Student findStudentByID(int studentID) {
    	for(Student student: students) {
    		if(student.getID() == studentID) {
    			return student;
    		}	
    	}
    	return null;
    }
    
    // show single student
    public void showStudent(int studentID) {
    	Student student = findStudentByID(studentID);
     
        if (student != null) {
            System.out.println(String.format("ID: %d, Name: %s, Age: %d", student.getID(), student.getName(), student.getAge()));
        } else {
        	System.out.println("Student not found");
        }
    }
}